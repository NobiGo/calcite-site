<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc -->
<title>AggregateReduceFunctionsRule (Apache Calcite API)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link rel="stylesheet" type="text/css" href="../../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../../script.js"></script>
<script type="text/javascript" src="../../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../../jquery/jquery-3.3.1.js"></script>
<script type="text/javascript" src="../../../../../jquery/jquery-migrate-3.0.1.js"></script>
<script type="text/javascript" src="../../../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="AggregateReduceFunctionsRule (Apache Calcite API)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":9,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/AggregateReduceFunctionsRule.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../../allclasses.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">org.apache.calcite.rel.rules</a></div>
<h2 title="Class AggregateReduceFunctionsRule" class="title">Class AggregateReduceFunctionsRule</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li><a href="../../plan/RelOptRule.html" title="class in org.apache.calcite.plan">org.apache.calcite.plan.RelOptRule</a></li>
<li>
<ul class="inheritance">
<li>org.apache.calcite.rel.rules.AggregateReduceFunctionsRule</li>
</ul>
</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<pre>public class <span class="typeNameLabel">AggregateReduceFunctionsRule</span>
extends <a href="../../plan/RelOptRule.html" title="class in org.apache.calcite.plan">RelOptRule</a></pre>
<div class="block">Planner rule that reduces aggregate functions in
 <a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core"><code>Aggregate</code></a>s to simpler forms.

 <p>Rewrites:
 <ul>

 <li>AVG(x) &rarr; SUM(x) / COUNT(x)

 <li>STDDEV_POP(x) &rarr; SQRT(
     (SUM(x * x) - SUM(x) * SUM(x) / COUNT(x))
    / COUNT(x))

 <li>STDDEV_SAMP(x) &rarr; SQRT(
     (SUM(x * x) - SUM(x) * SUM(x) / COUNT(x))
     / CASE COUNT(x) WHEN 1 THEN NULL ELSE COUNT(x) - 1 END)

 <li>VAR_POP(x) &rarr; (SUM(x * x) - SUM(x) * SUM(x) / COUNT(x))
     / COUNT(x)

 <li>VAR_SAMP(x) &rarr; (SUM(x * x) - SUM(x) * SUM(x) / COUNT(x))
        / CASE COUNT(x) WHEN 1 THEN NULL ELSE COUNT(x) - 1 END

 <li>COVAR_POP(x, y) &rarr; (SUM(x * y) - SUM(x, y) * SUM(y, x)
     / REGR_COUNT(x, y)) / REGR_COUNT(x, y)

 <li>COVAR_SAMP(x, y) &rarr; (SUM(x * y) - SUM(x, y) * SUM(y, x) / REGR_COUNT(x, y))
     / CASE REGR_COUNT(x, y) WHEN 1 THEN NULL ELSE REGR_COUNT(x, y) - 1 END

 <li>REGR_SXX(x, y) &rarr; REGR_COUNT(x, y) * VAR_POP(y)

 <li>REGR_SYY(x, y) &rarr; REGR_COUNT(x, y) * VAR_POP(x)

 </ul>

 <p>Since many of these rewrites introduce multiple occurrences of simpler
 forms like <code>COUNT(x)</code>, the rule gathers common sub-expressions as it
 goes.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- =========== FIELD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.summary">
<!--   -->
</a>
<h3>Field Summary</h3>
<table class="memberSummary">
<caption><span>Fields</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Field</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static <a href="AggregateReduceFunctionsRule.html" title="class in org.apache.calcite.rel.rules">AggregateReduceFunctionsRule</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#INSTANCE">INSTANCE</a></span></code></th>
<td class="colLast">
<div class="block">The singleton.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="fields.inherited.from.class.org.apache.calcite.plan.RelOptRule">
<!--   -->
</a>
<h3>Fields inherited from class&nbsp;org.apache.calcite.plan.<a href="../../plan/RelOptRule.html" title="class in org.apache.calcite.plan">RelOptRule</a></h3>
<code><a href="../../plan/RelOptRule.html#description">description</a>, <a href="../../plan/RelOptRule.html#operands">operands</a>, <a href="../../plan/RelOptRule.html#relBuilderFactory">relBuilderFactory</a></code></li>
</ul>
</li>
</ul>
</section>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory)">AggregateReduceFunctionsRule</a></span>&#8203;(<a href="../../plan/RelOptRuleOperand.html" title="class in org.apache.calcite.plan">RelOptRuleOperand</a>&nbsp;operand,
                            <a href="../../tools/RelBuilderFactory.html" title="interface in org.apache.calcite.tools">RelBuilderFactory</a>&nbsp;relBuilderFactory)</code></th>
<td class="colLast">
<div class="block">Creates an AggregateReduceFunctionsRule.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>private boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#containsAvgStddevVarCall(java.util.List)">containsAvgStddevVarCall</a></span>&#8203;(java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;aggCallList)</code></th>
<td class="colLast">
<div class="block">Returns whether any of the aggregates are calls to AVG, STDDEV_*, VAR_*.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>private <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#createAggregateCallWithBinding(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlAggFunction,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,int,int)">createAggregateCallWithBinding</a></span>&#8203;(<a href="../type/RelDataTypeFactory.html" title="interface in org.apache.calcite.rel.type">RelDataTypeFactory</a>&nbsp;typeFactory,
                              <a href="../../sql/SqlAggFunction.html" title="class in org.apache.calcite.sql">SqlAggFunction</a>&nbsp;aggFunction,
                              <a href="../type/RelDataType.html" title="interface in org.apache.calcite.rel.type">RelDataType</a>&nbsp;operandType,
                              <a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
                              <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
                              int&nbsp;argOrdinal,
                              int&nbsp;filter)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>private <a href="../type/RelDataType.html" title="interface in org.apache.calcite.rel.type">RelDataType</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getFieldType(org.apache.calcite.rel.RelNode,int)">getFieldType</a></span>&#8203;(<a href="../RelNode.html" title="interface in org.apache.calcite.rel">RelNode</a>&nbsp;relNode,
            int&nbsp;i)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>private <a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getRegrCountRexNode(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map,org.apache.calcite.util.ImmutableIntList,com.google.common.collect.ImmutableList,int)">getRegrCountRexNode</a></span>&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
                   <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
                   java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
                   java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping,
                   <a href="../../util/ImmutableIntList.html" title="class in org.apache.calcite.util">ImmutableIntList</a>&nbsp;argOrdinals,
                   com.google.common.collect.ImmutableList&lt;<a href="../type/RelDataType.html" title="interface in org.apache.calcite.rel.type">RelDataType</a>&gt;&nbsp;operandTypes,
                   int&nbsp;filterArg)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>private <a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSumAggregatedRexNode(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map,org.apache.calcite.rex.RexBuilder,int,int)">getSumAggregatedRexNode</a></span>&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
                       <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
                       java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
                       java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping,
                       <a href="../../rex/RexBuilder.html" title="class in org.apache.calcite.rex">RexBuilder</a>&nbsp;rexBuilder,
                       int&nbsp;argOrdinal,
                       int&nbsp;filterArg)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>private <a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getSumAggregatedRexNodeWithBinding(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map,org.apache.calcite.rel.type.RelDataType,int,int)">getSumAggregatedRexNodeWithBinding</a></span>&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
                                  <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
                                  java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
                                  java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping,
                                  <a href="../type/RelDataType.html" title="interface in org.apache.calcite.rel.type">RelDataType</a>&nbsp;operandType,
                                  int&nbsp;argOrdinal,
                                  int&nbsp;filter)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>private boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isReducible(org.apache.calcite.sql.SqlKind)">isReducible</a></span>&#8203;(<a href="../../sql/SqlKind.html" title="enum in org.apache.calcite.sql">SqlKind</a>&nbsp;kind)</code></th>
<td class="colLast">
<div class="block">Returns whether the aggregate call is a reducible function</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>private static &lt;T&gt;&nbsp;int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#lookupOrAdd(java.util.List,T)">lookupOrAdd</a></span>&#8203;(java.util.List&lt;T&gt;&nbsp;list,
           T&nbsp;element)</code></th>
<td class="colLast">
<div class="block">Finds the ordinal of an element in a list, or adds it.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#matches(org.apache.calcite.plan.RelOptRuleCall)">matches</a></span>&#8203;(<a href="../../plan/RelOptRuleCall.html" title="class in org.apache.calcite.plan">RelOptRuleCall</a>&nbsp;call)</code></th>
<td class="colLast">
<div class="block">Returns whether this rule could possibly match the given operands.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>protected void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#newAggregateRel(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List)">newAggregateRel</a></span>&#8203;(<a href="../../tools/RelBuilder.html" title="class in org.apache.calcite.tools">RelBuilder</a>&nbsp;relBuilder,
               <a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggregate,
               java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls)</code></th>
<td class="colLast">
<div class="block">Do a shallow clone of oldAggRel and update aggCalls.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>protected void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#newCalcRel(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)">newCalcRel</a></span>&#8203;(<a href="../../tools/RelBuilder.html" title="class in org.apache.calcite.tools">RelBuilder</a>&nbsp;relBuilder,
          <a href="../type/RelDataType.html" title="interface in org.apache.calcite.rel.type">RelDataType</a>&nbsp;rowType,
          java.util.List&lt;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;exprs)</code></th>
<td class="colLast">
<div class="block">Add a calc with the expressions to compute the original agg calls from the
 decomposed ones.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#onMatch(org.apache.calcite.plan.RelOptRuleCall)">onMatch</a></span>&#8203;(<a href="../../plan/RelOptRuleCall.html" title="class in org.apache.calcite.plan">RelOptRuleCall</a>&nbsp;ruleCall)</code></th>
<td class="colLast">
<div class="block">Receives notification about a rule match.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>private <a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#reduceAgg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map,java.util.List)">reduceAgg</a></span>&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
         <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
         java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
         java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping,
         java.util.List&lt;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;inputExprs)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>private void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)">reduceAggs</a></span>&#8203;(<a href="../../plan/RelOptRuleCall.html" title="class in org.apache.calcite.plan">RelOptRuleCall</a>&nbsp;ruleCall,
          <a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel)</code></th>
<td class="colLast">
<div class="block">Reduces all calls to AVG, STDDEV_POP, STDDEV_SAMP, VAR_POP, VAR_SAMP in
 the aggregates list to.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>private <a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map,java.util.List)">reduceAvg</a></span>&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
         <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
         java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
         java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping,
         java.util.List&lt;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;inputExprs)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>private <a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#reduceCovariance(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,java.util.List,java.util.Map,java.util.List)">reduceCovariance</a></span>&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
                <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
                boolean&nbsp;biased,
                java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
                java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping,
                java.util.List&lt;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;inputExprs)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>private <a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#reduceRegrSzz(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map,java.util.List,int,int,int)">reduceRegrSzz</a></span>&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
             <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
             java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
             java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping,
             java.util.List&lt;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;inputExprs,
             int&nbsp;xIndex,
             int&nbsp;yIndex,
             int&nbsp;nullFilterIndex)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>private <a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)">reduceStddev</a></span>&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
            <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
            boolean&nbsp;biased,
            boolean&nbsp;sqrt,
            java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
            java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping,
            java.util.List&lt;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;inputExprs)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>private <a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)">reduceSum</a></span>&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
         <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
         java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
         java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.org.apache.calcite.plan.RelOptRule">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;org.apache.calcite.plan.<a href="../../plan/RelOptRule.html" title="class in org.apache.calcite.plan">RelOptRule</a></h3>
<code><a href="../../plan/RelOptRule.html#any()">any</a>, <a href="../../plan/RelOptRule.html#convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTrait)">convert</a>, <a href="../../plan/RelOptRule.html#convert(org.apache.calcite.rel.RelNode,org.apache.calcite.plan.RelTraitSet)">convert</a>, <a href="../../plan/RelOptRule.html#convertList(java.util.List,org.apache.calcite.plan.RelTrait)">convertList</a>, <a href="../../plan/RelOptRule.html#convertOperand(java.lang.Class,com.google.common.base.Predicate,org.apache.calcite.plan.RelTrait)">convertOperand</a>, <a href="../../plan/RelOptRule.html#convertOperand(java.lang.Class,java.util.function.Predicate,org.apache.calcite.plan.RelTrait)">convertOperand</a>, <a href="../../plan/RelOptRule.html#equals(java.lang.Object)">equals</a>, <a href="../../plan/RelOptRule.html#equals(org.apache.calcite.plan.RelOptRule)">equals</a>, <a href="../../plan/RelOptRule.html#getOperand()">getOperand</a>, <a href="../../plan/RelOptRule.html#getOperands()">getOperands</a>, <a href="../../plan/RelOptRule.html#getOutConvention()">getOutConvention</a>, <a href="../../plan/RelOptRule.html#getOutTrait()">getOutTrait</a>, <a href="../../plan/RelOptRule.html#hashCode()">hashCode</a>, <a href="../../plan/RelOptRule.html#none()">none</a>, <a href="../../plan/RelOptRule.html#operand(java.lang.Class,org.apache.calcite.plan.RelOptRuleOperandChildren)">operand</a>, <a href="../../plan/RelOptRule.html#operand(java.lang.Class,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.plan.RelOptRuleOperand...)">operand</a>, <a href="../../plan/RelOptRule.html#operand(java.lang.Class,org.apache.calcite.plan.RelTrait,com.google.common.base.Predicate,org.apache.calcite.plan.RelOptRuleOperandChildren)">operand</a>, <a href="../../plan/RelOptRule.html#operand(java.lang.Class,org.apache.calcite.plan.RelTrait,com.google.common.base.Predicate,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.plan.RelOptRuleOperand...)">operand</a>, <a href="../../plan/RelOptRule.html#operand(java.lang.Class,org.apache.calcite.plan.RelTrait,org.apache.calcite.plan.RelOptRuleOperandChildren)">operand</a>, <a href="../../plan/RelOptRule.html#operandJ(java.lang.Class,org.apache.calcite.plan.RelTrait,java.util.function.Predicate,org.apache.calcite.plan.RelOptRuleOperandChildren)">operandJ</a>, <a href="../../plan/RelOptRule.html#operandJ(java.lang.Class,org.apache.calcite.plan.RelTrait,java.util.function.Predicate,org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.plan.RelOptRuleOperand...)">operandJ</a>, <a href="../../plan/RelOptRule.html#some(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.plan.RelOptRuleOperand...)">some</a>, <a href="../../plan/RelOptRule.html#toString()">toString</a>, <a href="../../plan/RelOptRule.html#unordered(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.plan.RelOptRuleOperand...)">unordered</a></code></li>
</ul>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, finalize, getClass, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ FIELD DETAIL =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="field.detail">
<!--   -->
</a>
<h3>Field Detail</h3>
<a id="INSTANCE">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>INSTANCE</h4>
<pre>public static final&nbsp;<a href="AggregateReduceFunctionsRule.html" title="class in org.apache.calcite.rel.rules">AggregateReduceFunctionsRule</a> INSTANCE</pre>
<div class="block">The singleton.</div>
</li>
</ul>
</li>
</ul>
</section>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a id="&lt;init&gt;(org.apache.calcite.plan.RelOptRuleOperand,org.apache.calcite.tools.RelBuilderFactory)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>AggregateReduceFunctionsRule</h4>
<pre>public&nbsp;AggregateReduceFunctionsRule&#8203;(<a href="../../plan/RelOptRuleOperand.html" title="class in org.apache.calcite.plan">RelOptRuleOperand</a>&nbsp;operand,
                                    <a href="../../tools/RelBuilderFactory.html" title="interface in org.apache.calcite.tools">RelBuilderFactory</a>&nbsp;relBuilderFactory)</pre>
<div class="block">Creates an AggregateReduceFunctionsRule.</div>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="matches(org.apache.calcite.plan.RelOptRuleCall)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>matches</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;matches&#8203;(<a href="../../plan/RelOptRuleCall.html" title="class in org.apache.calcite.plan">RelOptRuleCall</a>&nbsp;call)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../../plan/RelOptRule.html#matches(org.apache.calcite.plan.RelOptRuleCall)">RelOptRule</a></code></span></div>
<div class="block">Returns whether this rule could possibly match the given operands.

 <p>This method is an opportunity to apply side-conditions to a rule. The
 <a href="../../plan/RelOptPlanner.html" title="interface in org.apache.calcite.plan"><code>RelOptPlanner</code></a> calls this method after matching all operands of
 the rule, and before calling <a href="../../plan/RelOptRule.html#onMatch(org.apache.calcite.plan.RelOptRuleCall)"><code>RelOptRule.onMatch(RelOptRuleCall)</code></a>.

 <p>In implementations of <a href="../../plan/RelOptPlanner.html" title="interface in org.apache.calcite.plan"><code>RelOptPlanner</code></a> which may queue up a
 matched <a href="../../plan/RelOptRuleCall.html" title="class in org.apache.calcite.plan"><code>RelOptRuleCall</code></a> for a long time before calling
 <a href="../../plan/RelOptRule.html#onMatch(org.apache.calcite.plan.RelOptRuleCall)"><code>RelOptRule.onMatch(RelOptRuleCall)</code></a>, this method is beneficial because it
 allows the planner to discard rules earlier in the process.

 <p>The default implementation of this method returns <code>true</code>.
 It is acceptable for any implementation of this method to give a false
 positives, that is, to say that the rule matches the operands but have
 <a href="../../plan/RelOptRule.html#onMatch(org.apache.calcite.plan.RelOptRuleCall)"><code>RelOptRule.onMatch(RelOptRuleCall)</code></a> subsequently not generate any
 successors.

 <p>The following script is useful to identify rules which commonly
 produce no successors. You should override this method for these rules:

 <blockquote>
 <pre><code>awk '
 /Apply rule/ {rule=$4; ruleCount[rule]++;}
 /generated 0 successors/ {ruleMiss[rule]++;}
 END {
   printf "%-30s %s %s\n", "Rule", "Fire", "Miss";
   for (i in ruleCount) {
     printf "%-30s %5d %5d\n", i, ruleCount[i], ruleMiss[i];
   }
 } ' FarragoTrace.log</code></pre>
 </blockquote></div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="../../plan/RelOptRule.html#matches(org.apache.calcite.plan.RelOptRuleCall)">matches</a></code>&nbsp;in class&nbsp;<code><a href="../../plan/RelOptRule.html" title="class in org.apache.calcite.plan">RelOptRule</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>call</code> - Rule call which has been determined to match all operands of
             this rule</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>whether this RelOptRule matches a given RelOptRuleCall</dd>
</dl>
</li>
</ul>
<a id="onMatch(org.apache.calcite.plan.RelOptRuleCall)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>onMatch</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;onMatch&#8203;(<a href="../../plan/RelOptRuleCall.html" title="class in org.apache.calcite.plan">RelOptRuleCall</a>&nbsp;ruleCall)</pre>
<div class="block"><span class="descfrmTypeLabel">Description copied from class:&nbsp;<code><a href="../../plan/RelOptRule.html#onMatch(org.apache.calcite.plan.RelOptRuleCall)">RelOptRule</a></code></span></div>
<div class="block">Receives notification about a rule match. At the time that this method is
 called, <a href="../../plan/RelOptRuleCall.html#rels"><code>call.rels</code></a> holds the set of relational
 expressions which match the operands to the rule; <code>
 call.rels[0]</code> is the root expression.

 <p>Typically a rule would check that the nodes are valid matches, creates
 a new expression, then calls back <a href="../../plan/RelOptRuleCall.html#transformTo(org.apache.calcite.rel.RelNode,java.util.Map)"><code>RelOptRuleCall.transformTo(org.apache.calcite.rel.RelNode, java.util.Map&lt;org.apache.calcite.rel.RelNode, org.apache.calcite.rel.RelNode&gt;)</code></a> to
 register the expression.</p></div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="../../plan/RelOptRule.html#onMatch(org.apache.calcite.plan.RelOptRuleCall)">onMatch</a></code>&nbsp;in class&nbsp;<code><a href="../../plan/RelOptRule.html" title="class in org.apache.calcite.plan">RelOptRule</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>ruleCall</code> - Rule call</dd>
<dt><span class="seeLabel">See Also:</span></dt>
<dd><a href="../../plan/RelOptRule.html#matches(org.apache.calcite.plan.RelOptRuleCall)"><code>RelOptRule.matches(RelOptRuleCall)</code></a></dd>
</dl>
</li>
</ul>
<a id="containsAvgStddevVarCall(java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>containsAvgStddevVarCall</h4>
<pre class="methodSignature">private&nbsp;boolean&nbsp;containsAvgStddevVarCall&#8203;(java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;aggCallList)</pre>
<div class="block">Returns whether any of the aggregates are calls to AVG, STDDEV_*, VAR_*.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>aggCallList</code> - List of aggregate calls</dd>
</dl>
</li>
</ul>
<a id="isReducible(org.apache.calcite.sql.SqlKind)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isReducible</h4>
<pre class="methodSignature">private&nbsp;boolean&nbsp;isReducible&#8203;(<a href="../../sql/SqlKind.html" title="enum in org.apache.calcite.sql">SqlKind</a>&nbsp;kind)</pre>
<div class="block">Returns whether the aggregate call is a reducible function</div>
</li>
</ul>
<a id="reduceAggs(org.apache.calcite.plan.RelOptRuleCall,org.apache.calcite.rel.core.Aggregate)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reduceAggs</h4>
<pre class="methodSignature">private&nbsp;void&nbsp;reduceAggs&#8203;(<a href="../../plan/RelOptRuleCall.html" title="class in org.apache.calcite.plan">RelOptRuleCall</a>&nbsp;ruleCall,
                        <a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel)</pre>
<div class="block">Reduces all calls to AVG, STDDEV_POP, STDDEV_SAMP, VAR_POP, VAR_SAMP in
 the aggregates list to.

 <p>It handles newly generated common subexpressions since this was done
 at the sql2rel stage.</div>
</li>
</ul>
<a id="reduceAgg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map,java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reduceAgg</h4>
<pre class="methodSignature">private&nbsp;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&nbsp;reduceAgg&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
                          <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
                          java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
                          java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping,
                          java.util.List&lt;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;inputExprs)</pre>
</li>
</ul>
<a id="createAggregateCallWithBinding(org.apache.calcite.rel.type.RelDataTypeFactory,org.apache.calcite.sql.SqlAggFunction,org.apache.calcite.rel.type.RelDataType,org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>createAggregateCallWithBinding</h4>
<pre class="methodSignature">private&nbsp;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;createAggregateCallWithBinding&#8203;(<a href="../type/RelDataTypeFactory.html" title="interface in org.apache.calcite.rel.type">RelDataTypeFactory</a>&nbsp;typeFactory,
                                                     <a href="../../sql/SqlAggFunction.html" title="class in org.apache.calcite.sql">SqlAggFunction</a>&nbsp;aggFunction,
                                                     <a href="../type/RelDataType.html" title="interface in org.apache.calcite.rel.type">RelDataType</a>&nbsp;operandType,
                                                     <a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
                                                     <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
                                                     int&nbsp;argOrdinal,
                                                     int&nbsp;filter)</pre>
</li>
</ul>
<a id="reduceAvg(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map,java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reduceAvg</h4>
<pre class="methodSignature">private&nbsp;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&nbsp;reduceAvg&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
                          <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
                          java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
                          java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping,
                          java.util.List&lt;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;inputExprs)</pre>
</li>
</ul>
<a id="reduceSum(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reduceSum</h4>
<pre class="methodSignature">private&nbsp;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&nbsp;reduceSum&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
                          <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
                          java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
                          java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping)</pre>
</li>
</ul>
<a id="reduceStddev(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,boolean,java.util.List,java.util.Map,java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reduceStddev</h4>
<pre class="methodSignature">private&nbsp;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&nbsp;reduceStddev&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
                             <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
                             boolean&nbsp;biased,
                             boolean&nbsp;sqrt,
                             java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
                             java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping,
                             java.util.List&lt;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;inputExprs)</pre>
</li>
</ul>
<a id="getSumAggregatedRexNode(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map,org.apache.calcite.rex.RexBuilder,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSumAggregatedRexNode</h4>
<pre class="methodSignature">private&nbsp;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&nbsp;getSumAggregatedRexNode&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
                                        <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
                                        java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
                                        java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping,
                                        <a href="../../rex/RexBuilder.html" title="class in org.apache.calcite.rex">RexBuilder</a>&nbsp;rexBuilder,
                                        int&nbsp;argOrdinal,
                                        int&nbsp;filterArg)</pre>
</li>
</ul>
<a id="getSumAggregatedRexNodeWithBinding(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map,org.apache.calcite.rel.type.RelDataType,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSumAggregatedRexNodeWithBinding</h4>
<pre class="methodSignature">private&nbsp;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&nbsp;getSumAggregatedRexNodeWithBinding&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
                                                   <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
                                                   java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
                                                   java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping,
                                                   <a href="../type/RelDataType.html" title="interface in org.apache.calcite.rel.type">RelDataType</a>&nbsp;operandType,
                                                   int&nbsp;argOrdinal,
                                                   int&nbsp;filter)</pre>
</li>
</ul>
<a id="getRegrCountRexNode(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map,org.apache.calcite.util.ImmutableIntList,com.google.common.collect.ImmutableList,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getRegrCountRexNode</h4>
<pre class="methodSignature">private&nbsp;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&nbsp;getRegrCountRexNode&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
                                    <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
                                    java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
                                    java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping,
                                    <a href="../../util/ImmutableIntList.html" title="class in org.apache.calcite.util">ImmutableIntList</a>&nbsp;argOrdinals,
                                    com.google.common.collect.ImmutableList&lt;<a href="../type/RelDataType.html" title="interface in org.apache.calcite.rel.type">RelDataType</a>&gt;&nbsp;operandTypes,
                                    int&nbsp;filterArg)</pre>
</li>
</ul>
<a id="reduceRegrSzz(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,java.util.List,java.util.Map,java.util.List,int,int,int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reduceRegrSzz</h4>
<pre class="methodSignature">private&nbsp;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&nbsp;reduceRegrSzz&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
                              <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
                              java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
                              java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping,
                              java.util.List&lt;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;inputExprs,
                              int&nbsp;xIndex,
                              int&nbsp;yIndex,
                              int&nbsp;nullFilterIndex)</pre>
</li>
</ul>
<a id="reduceCovariance(org.apache.calcite.rel.core.Aggregate,org.apache.calcite.rel.core.AggregateCall,boolean,java.util.List,java.util.Map,java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>reduceCovariance</h4>
<pre class="methodSignature">private&nbsp;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&nbsp;reduceCovariance&#8203;(<a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggRel,
                                 <a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&nbsp;oldCall,
                                 boolean&nbsp;biased,
                                 java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls,
                                 java.util.Map&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>,&#8203;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;aggCallMapping,
                                 java.util.List&lt;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;inputExprs)</pre>
</li>
</ul>
<a id="lookupOrAdd(java.util.List,java.lang.Object)">
<!--   -->
</a><a id="lookupOrAdd(java.util.List,T)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>lookupOrAdd</h4>
<pre class="methodSignature">private static&nbsp;&lt;T&gt;&nbsp;int&nbsp;lookupOrAdd&#8203;(java.util.List&lt;T&gt;&nbsp;list,
                                   T&nbsp;element)</pre>
<div class="block">Finds the ordinal of an element in a list, or adds it.</div>
<dl>
<dt><span class="paramLabel">Type Parameters:</span></dt>
<dd><code>T</code> - Element type</dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>list</code> - List</dd>
<dd><code>element</code> - Element to lookup or add</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Ordinal of element in list</dd>
</dl>
</li>
</ul>
<a id="newAggregateRel(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.core.Aggregate,java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>newAggregateRel</h4>
<pre class="methodSignature">protected&nbsp;void&nbsp;newAggregateRel&#8203;(<a href="../../tools/RelBuilder.html" title="class in org.apache.calcite.tools">RelBuilder</a>&nbsp;relBuilder,
                               <a href="../core/Aggregate.html" title="class in org.apache.calcite.rel.core">Aggregate</a>&nbsp;oldAggregate,
                               java.util.List&lt;<a href="../core/AggregateCall.html" title="class in org.apache.calcite.rel.core">AggregateCall</a>&gt;&nbsp;newCalls)</pre>
<div class="block">Do a shallow clone of oldAggRel and update aggCalls. Could be refactored
 into Aggregate and subclasses - but it's only needed for some
 subclasses.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>relBuilder</code> - Builder of relational expressions; at the top of its
                   stack is its input</dd>
<dd><code>oldAggregate</code> - LogicalAggregate to clone.</dd>
<dd><code>newCalls</code> - New list of AggregateCalls</dd>
</dl>
</li>
</ul>
<a id="newCalcRel(org.apache.calcite.tools.RelBuilder,org.apache.calcite.rel.type.RelDataType,java.util.List)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>newCalcRel</h4>
<pre class="methodSignature">protected&nbsp;void&nbsp;newCalcRel&#8203;(<a href="../../tools/RelBuilder.html" title="class in org.apache.calcite.tools">RelBuilder</a>&nbsp;relBuilder,
                          <a href="../type/RelDataType.html" title="interface in org.apache.calcite.rel.type">RelDataType</a>&nbsp;rowType,
                          java.util.List&lt;<a href="../../rex/RexNode.html" title="class in org.apache.calcite.rex">RexNode</a>&gt;&nbsp;exprs)</pre>
<div class="block">Add a calc with the expressions to compute the original agg calls from the
 decomposed ones.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>relBuilder</code> - Builder of relational expressions; at the top of its
                   stack is its input</dd>
<dd><code>rowType</code> - The output row type of the original aggregate.</dd>
<dd><code>exprs</code> - The expressions to compute the original agg calls.</dd>
</dl>
</li>
</ul>
<a id="getFieldType(org.apache.calcite.rel.RelNode,int)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>getFieldType</h4>
<pre class="methodSignature">private&nbsp;<a href="../type/RelDataType.html" title="interface in org.apache.calcite.rel.type">RelDataType</a>&nbsp;getFieldType&#8203;(<a href="../RelNode.html" title="interface in org.apache.calcite.rel">RelNode</a>&nbsp;relNode,
                                 int&nbsp;i)</pre>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/AggregateReduceFunctionsRule.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../../allclasses.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright &#169; 2012&#x2013;2018 <a href="https://www.apache.org/">The Apache Software Foundation</a>. All rights reserved.</small></p>
</footer>
</body>
</html>
