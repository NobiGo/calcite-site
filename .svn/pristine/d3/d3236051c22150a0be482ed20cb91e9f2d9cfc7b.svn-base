<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc -->
<title>DeterministicTest (Calcite 1.18.0 Test API)</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link rel="stylesheet" type="text/css" href="../../../../../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../../../../../jquery/jquery-ui.css" title="Style">
<script type="text/javascript" src="../../../../../script.js"></script>
<script type="text/javascript" src="../../../../../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../../../../../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../../../../../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../../../../../jquery/jquery-3.3.1.js"></script>
<script type="text/javascript" src="../../../../../jquery/jquery-migrate-3.0.1.js"></script>
<script type="text/javascript" src="../../../../../jquery/jquery-ui.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="DeterministicTest (Calcite 1.18.0 Test API)";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":9,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10};
var tabs = {65535:["t0","All Methods"],1:["t1","Static Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../../../../../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/DeterministicTest.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../../allclasses.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">org.apache.calcite.linq4j.test</a></div>
<h2 title="Class DeterministicTest" class="title">Class DeterministicTest</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>org.apache.calcite.linq4j.test.DeterministicTest</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<pre>public class <span class="typeNameLabel">DeterministicTest</span>
extends java.lang.Object</pre>
<div class="block">Tests factoring out deterministic expressions.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<table class="memberSummary">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Class</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static class&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="DeterministicTest.TestClass.html" title="class in org.apache.calcite.linq4j.test">DeterministicTest.TestClass</a></span></code></th>
<td class="colLast">
<div class="block">Class to test @Deterministic annotation</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>static class&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="DeterministicTest.TestDeterministicClass.html" title="class in org.apache.calcite.linq4j.test">DeterministicTest.TestDeterministicClass</a></span></code></th>
<td class="colLast">
<div class="block">Class to test @NonDeterministic annotation</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E()">DeterministicTest</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t1" class="tableTab"><span><a href="javascript:show(1);">Static Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>private static java.lang.reflect.Method</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getMethod(java.lang.Class,java.lang.String,java.lang.Class...)">getMethod</a></span>&#8203;(java.lang.Class&lt;?&gt;&nbsp;thisClass,
         java.lang.String&nbsp;methodName,
         java.lang.Class&lt;?&gt;...&nbsp;paramClasses)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>private boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isAtomic(org.apache.calcite.linq4j.tree.Expression)">isAtomic</a></span>&#8203;(org.apache.calcite.linq4j.tree.Expression&nbsp;e)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>private boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#isConstant(org.apache.calcite.linq4j.tree.Expression)">isConstant</a></span>&#8203;(org.apache.calcite.linq4j.tree.Expression&nbsp;e)</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#testBigIntegerValueOf()">testBigIntegerValueOf</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#testConstantIsConstant()">testConstantIsConstant</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#testDeterministicClassDefaultMethod()">testDeterministicClassDefaultMethod</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#testDeterministicClassNonDeterministicMethod()">testDeterministicClassNonDeterministicMethod</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#testDeterministicMethodCall()">testDeterministicMethodCall</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#testFactorOutBinaryAdd()">testFactorOutBinaryAdd</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#testFactorOutBinaryAddMul()">testFactorOutBinaryAddMul</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#testFactorOutBinaryAddNameCollision()">testFactorOutBinaryAddNameCollision</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#testFactorOutBinaryAddSurvivesMultipleOptimizations()">testFactorOutBinaryAddSurvivesMultipleOptimizations</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#testFactorOutNestedClasses()">testFactorOutNestedClasses</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#testInstanceofComplexTest()">testInstanceofComplexTest</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#testInstanceofTest()">testInstanceofTest</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#testIntegerValueOfZeroComplexTest()">testIntegerValueOfZeroComplexTest</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#testNewBigInteger()">testNewBigInteger</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#testNonDeterministicMethodCall()">testNonDeterministicMethodCall</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#testStaticField()">testStaticField</a></span>()</code></th>
<td class="colLast">&nbsp;</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a id="&lt;init&gt;()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>DeterministicTest</h4>
<pre>public&nbsp;DeterministicTest()</pre>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section role="region">
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="isAtomic(org.apache.calcite.linq4j.tree.Expression)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isAtomic</h4>
<pre class="methodSignature">private&nbsp;boolean&nbsp;isAtomic&#8203;(org.apache.calcite.linq4j.tree.Expression&nbsp;e)</pre>
</li>
</ul>
<a id="getMethod(java.lang.Class,java.lang.String,java.lang.Class...)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMethod</h4>
<pre class="methodSignature">private static&nbsp;java.lang.reflect.Method&nbsp;getMethod&#8203;(java.lang.Class&lt;?&gt;&nbsp;thisClass,
                                                  java.lang.String&nbsp;methodName,
                                                  java.lang.Class&lt;?&gt;...&nbsp;paramClasses)</pre>
</li>
</ul>
<a id="isConstant(org.apache.calcite.linq4j.tree.Expression)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>isConstant</h4>
<pre class="methodSignature">private&nbsp;boolean&nbsp;isConstant&#8203;(org.apache.calcite.linq4j.tree.Expression&nbsp;e)</pre>
</li>
</ul>
<a id="testConstantIsConstant()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testConstantIsConstant</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;testConstantIsConstant()</pre>
</li>
</ul>
<a id="testFactorOutBinaryAdd()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testFactorOutBinaryAdd</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;testFactorOutBinaryAdd()</pre>
</li>
</ul>
<a id="testFactorOutBinaryAddSurvivesMultipleOptimizations()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testFactorOutBinaryAddSurvivesMultipleOptimizations</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;testFactorOutBinaryAddSurvivesMultipleOptimizations()</pre>
</li>
</ul>
<a id="testFactorOutBinaryAddNameCollision()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testFactorOutBinaryAddNameCollision</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;testFactorOutBinaryAddNameCollision()</pre>
</li>
</ul>
<a id="testFactorOutBinaryAddMul()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testFactorOutBinaryAddMul</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;testFactorOutBinaryAddMul()</pre>
</li>
</ul>
<a id="testFactorOutNestedClasses()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testFactorOutNestedClasses</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;testFactorOutNestedClasses()</pre>
</li>
</ul>
<a id="testNewBigInteger()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testNewBigInteger</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;testNewBigInteger()</pre>
</li>
</ul>
<a id="testInstanceofTest()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testInstanceofTest</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;testInstanceofTest()</pre>
</li>
</ul>
<a id="testInstanceofComplexTest()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testInstanceofComplexTest</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;testInstanceofComplexTest()</pre>
</li>
</ul>
<a id="testIntegerValueOfZeroComplexTest()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testIntegerValueOfZeroComplexTest</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;testIntegerValueOfZeroComplexTest()</pre>
</li>
</ul>
<a id="testStaticField()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testStaticField</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;testStaticField()</pre>
</li>
</ul>
<a id="testBigIntegerValueOf()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testBigIntegerValueOf</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;testBigIntegerValueOf()</pre>
</li>
</ul>
<a id="testDeterministicMethodCall()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testDeterministicMethodCall</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;testDeterministicMethodCall()</pre>
</li>
</ul>
<a id="testNonDeterministicMethodCall()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testNonDeterministicMethodCall</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;testNonDeterministicMethodCall()</pre>
</li>
</ul>
<a id="testDeterministicClassDefaultMethod()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>testDeterministicClassDefaultMethod</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;testDeterministicClassDefaultMethod()</pre>
</li>
</ul>
<a id="testDeterministicClassNonDeterministicMethod()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>testDeterministicClassNonDeterministicMethod</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;testDeterministicClassNonDeterministicMethod()</pre>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/DeterministicTest.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../../allclasses.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
<p class="legalCopy"><small>Copyright &#169; 2012&#x2013;2018 <a href="https://www.apache.org/">The Apache Software Foundation</a>. All rights reserved.</small></p>
</footer>
</body>
</html>
